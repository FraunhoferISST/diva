openapi: 3.0.0
info:
  description: "Search Assistant is responsible for providing predefined search APIs against an Elasticsearch instance"
  version: 1.0.0
  title: Search Assistant API
servers:
  - url: http://localhost:3005
tags:
  - name: search
    description: Search requests

paths:
  /search:
    parameters:
      - $ref: "#/components/parameters/actoridParam"
    get:
      tags:
        - search
      summary: Global search over all Elasticsearch Indecies
      description: Send a query term in URL parameter `q` and get a result set in return. The search response contains
        a `collection` array that can contain any known entity like resource, asset or user. To fetch the next page you can use a `cursor`
        that is included in the response if there is a next page.
      operationId: searchAll
      parameters:
        - name: q
          in: query
          description: Search term
          example: "Cancer Data"
          required: false
          explode: false
          allowReserved: true
          schema:
            type: string
            minLength: 0
        - name: pageSize
          in: query
          description: Number of results to be returned
          example: 30
          required: false
          explode: false
          allowReserved: true
          schema:
            type: integer   
        - name: cursor
          in: query
          description: Cursor for next result set
          example: "eyJxdWVyeSI6InJlc291cmNlOnV1aWQ6NTc1NjlkMDUtZmM3YS00NTc0LWFkZTAtYmQ1ZTNiMTk0N2M4IiwiZnJvbSI6MzAsInNpemUiOjMwfQ=="
          required: false
          explode: false
          allowReserved: true
          schema:
            type: string
        - name: facets
          in: query
          description: Facets for current query
          example: "entityType,keywords"
          required: false
          explode: true
          allowReserved: true
          schema:
            type: string
        - name: facetsOperator
          in: query
          description: Facets Operator for current query (default "and")
          example: "and"
          required: false
          explode: false
          allowReserved: true
          schema:
            type: string
            enum:
              - "must"
              - "should"
              - "mustNot"
      responses:
        "200":
          description: Search result
          content:
            application/json:
              schema:
                type: object
                title: Searh result
                description: Search result contains the collection of fond items and cursor for the next page
                properties:
                  collection:
                    description: Results array
                    type: array
                    items:
                      type: object
                      required:
                        - doc
                      properties:
                        doc:
                          title: Matching Document
                          description: A matching document that represents found entity
                          type: object
                        highlight:
                          title: Highlight
                          description: Highlight properties that qualifies the resources for the search query
                          type: object
                  cursor:
                    description: Cursor for the next page
                    type: string
                    example: "eyJxdWVyeSI6InJlc291cmNlOnV1aWQ6NTc1NjlkMDUtZmM3YS00NTc0LWFkZTAtYmQ1ZTNiMTk0N2M4IiwiZnJvbSI6MzAsInNpemUiOjMwfQ=="

        "4XX":
          $ref: "#/components/responses/UnexpectedError"
        "5XX":
          $ref: "#/components/responses/UnexpectedError"
    
components:

  schemas:
    Error:
      type: object
      title: Operation error
      description: Error that can occure on request processing
      required:
        - type
        - message
        - code
      properties:
        type:
          title: Error type
          description: Futher error type information
          type: string
        message:
          title: Error message
          description: Details about error
          type: string
        code:
          title: Error code
          description: HTTP error code
          type: number
          format: int32
          example: 409
        errors:
          title: Errors
          description: More error details that are reference in most case specification or schema validation errors
          type: array
          items:
            type: object

  responses:
    Success:
      description: Succesful
    UnexpectedError:
      description: Internal error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InvalidDataError:
      description: Invalid data supplied
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    
  parameters:
    actoridParam:
      in: header
      description: The id of the origin that requests the API. Can be a user or service.
      name: x-actorid
      schema:
        type: string
        minLength: 1
        pattern: "^(user|service):uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$"
      required: true
