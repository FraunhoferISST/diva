asyncapi: 2.0.0
info:
  title: DIVA Kafka
  version: '1.0.0'
  description: |
    The specification describes the messages flow on the DIVA Kafka instance.

servers:
  production:
    url: localhost:{port}
    protocol: kafka
    description: DIVA messages broker
    variables:
      port:
        default: '9200'


defaultContentType: application/json

channels:
  user.events:
    description: The topic on which users data events may be produced and consumed.
    subscribe:
      description: Receive information about users data events.
      operationId: subscribeUserUpdate
      message:
        $ref: '#/components/messages/UserEvents'
    publish:
      description: Publish information about users data events.
      operationId: publishUserUpdate
      message:
        $ref: '#/components/messages/UserEvents'
  resource.events:
    description: The topic on which events related to resource operations may be produced and consumed.
    subscribe:
      description: Receive resource operations events.
      operationId: subscribeResourceEvents
      message:
        $ref: '#/components/messages/ResourceEvents'
    publish:
      description: Publish information about resource data changes.
      operationId: publishResoureEvents
      message:
        $ref: '#/components/messages/ResourceEvents'
  asset.events:
    description: The topic on which events related to asset operations may be produced and consumed.
    subscribe:
      description: Receive asset operations events.
      operationId: subscribeAssetEvents
      message:
        $ref: '#/components/messages/AssetEvents'
    publish:
      description: Publish information about asset data changes.
      operationId: publishAssetEvents
      message:
        $ref: '#/components/messages/AssetEvents'
  review.events:
    description: The topic on which events related to reviews operations may be produced and consumed.
    subscribe:
      description: Receive reviews operations events.
      operationId: subscribeReviewEvents
      message:
        $ref: '#/components/messages/ReviewEvents'
    publish:
      description: Publish information about reviews data changes.
      operationId: publishReviewEvents
      message:
        $ref: '#/components/messages/ReviewEvents'

  service.events:
    description: The topic on which events related to services operations may be produced and consumed.
    subscribe:
      description: Receive services operations events.
      operationId: subscribeServiceEvents
      message:
        $ref: '#/components/messages/ServiceEvents'
    publish:
      description: Publish information about services data changes.
      operationId: publishServiceEvents
      message:
        $ref: '#/components/messages/ServiceEvents'

components:
  messages:
    UserEvents:
      name: userEvents
      title: Users events
      summary: Inform about users data changes.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/GenericMessageSchema'
    ResourceEvents:
      name: resourceEvents
      title: Resource events
      summary: Inform about resource operations events.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/GenericMessageSchema'
    AssetEvents:
      name: assetEvents
      title: Asset event
      summary: Inform about asset operations events.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/GenericMessageSchema'
    ReviewEvents:
      name: reviewEvents
      title: Review events
      summary: Inform about review operations events.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/GenericMessageSchema'

    ServiceEvents:
      name: serviceEvents
      title: Service events
      summary: Inform about services operations events.
      contentType: application/json
      payload:
        $ref: '#/components/schemas/GenericMessageSchema'
  schemas:
    GenericMessageSchema:
      type: object
      additionalProperties: false
      required:
        - schemaId
        - channel
        - messageName
        - messageId
        - serviceName
        - serviceId
        - creationDate
      properties:
        schemaId:
          type: string
          description: ID of AsyncAPI specification
          example: asyncapi-specification
        channel:
          type: string
          description: Corresponding AsyncAPI specification channel
          example: user.events
        messageName:
          type: string
          description: Corresponding AsyncAPI specification message name
          example: userEvents
        messageId:
          type: string
          description: Random message uuid
          example: urn:uuid:someid
        serviceName:
          type: string
          description: Publischer service name
          example: usermanagement
        serviceId:
          type: string
          description: Publischer service instance uuid
          example: urn:uuid:instanceid
        creationDate:
          type: string
          format: date-time
          description: Message publish date
        payload:
          $ref: '#/components/schemas/GenericMessagePayload'
    GenericMessagePayload:
      type: object
      title: Generic message paylod
      description: Generic message paylod required attributes
      additionalProperties: false
      required:
        - type
        - actor
        - object
      properties:
        type:
          title: Operation type
          type: string
          description: The type of the perfomed operation that indicates specific event like resource creation or deletion
          enum:
            - create
            - update
            - delete
            - read
          example: update
        actor:
          title: Actor
          describe: Actor that executed the operation. Can be a person or a service
          type: object
          additionalProperties: false
          required:
            - id
          properties:
            id:
              title: Actor id
              description: The id of the Actor that executed the operation
              type: string
        object:
          title: Affected entity
          description: The by the operation affected entity object.
          type: object
          additionalProperties: false
          required:
            - id
          properties:
            id:
              title: Object id
              description: The id of the affected entity object
              type: string
        attributedTo:
          title: Related entites
          description: The Array contains the id's of the entities that are related or referenced by the original event. For
            example a creation of a review may contain in this filed the id of the resource for wich this review was created
          type: array
          items:
            additionalItems: false
            type: object
            required:
              - object
            additionalProperties: false
            properties:
              object:
                title: Affected entity
                description: The by the operation referenced entity object.
                type: object
                additionalProperties: false
                required:
                  - id
                properties:
                  id:
                    title: Entity id
                    description: The id of the referenced entity
                    type: string
        payloadId:
          title: Payload id
          description: The payload id that can be used to fetch futher payload data from the messages cache
          type: string