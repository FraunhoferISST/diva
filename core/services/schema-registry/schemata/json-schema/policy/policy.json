{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "policy",
  "type": "object",
  "title": "General Policy Rule",
  "required": [
    "title",
    "priority",
    "method",
    "scope",
    "condition"
  ],
  "allOf": [
    {
      "properties": {
        "title": {

          "type": "string",
          "title": "Title",
          "description": "The title/description of the rule. A few words to explain what the rule is about.",
          "examples": [
            "Creator of resource can perform GET",
            "User can GET resource if both entities are part of asset"
          ]
        },
        "priority": {

          "type": "integer",
          "title": "Priority",
          "description": "The priority of the rule. Higher means more important. Priority number should be a natural number.",
          "default": 1,
          "minimum": 0
        },
        "method": {

          "type": "array",
          "minItems": 1,
          "title": "Method",
          "description": "The method(s) of the request the rule should apply to",
          "items": {
            "type": "string",
            "enum": ["GET", "POST", "PATCH", "PUT", "DELETE"]
          },
          "examples": [
            "GET",
            "POST",
            "PATCH",
            "PUT",
            "DELETE"
          ]
        },  
        "scope": {

          "type": "array",
          "minItems": 1,
          "title": "Scope",
          "description": "The scope(s) the rule should apply to. Needs to be unambiguous and is used to match queries to rules. A scope should include the service name and the url (divided by '::'). Scopes can include wildcards at the end to account for ids.",
          "items": {
            "type": "string",
            "pattern": "^.*::.*$"
          },
          "examples": [
            "entity-management::resources/*"
          ]
        },  
        "condition": {
          "oneOf": [
            {"$ref": "/condition"},
            {"type": "boolean"}
          ]
        },
        "constraints": {

          "type": "array",
          "minItems": 0,
          "title": "Constraints",
          "description": "A list of field(-names) that should not be visible/alterable. To overwrite rules with lower priority a '!' can be added before the field to include it again. The special string '!*' clears all constraints with lower priority.",
          "items": {
            "type": "string"
          },
          "examples": [
            "creatorId",
            "!secret",
            "!*"
          ]
        }       
        
      }
    }
  ]
}