openapi: 3.0.0
info:
  description: "Schema Registry Service is responsible for delivering JSON and AsyncAPI Schemata using HTTP"
  version: 1.0.0
  title: Schema Registry API
tags:
  - name: schemata
    description: Operations about schemata
paths:
  "/schemata/{name}":
    get:
      tags:
        - schemata
      summary: Get schema by name
      description: Returns a specific schema
      operationId: getSchemaByName
      parameters:
        - name: name
          in: path
          description: The name of the schema to fetch
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/SchemaResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
  "/resolvedSchemata/{name}":
    get:
      tags:
        - resolvedSchemata
      summary: Get resolved schema by name
      description: Returns a specific resolved schema insance
      operationId: getResolvedSchemaByName
      parameters:
        - name: name
          in: path
          description: The name of the schema to fetch
          required: true
          schema:
            type: string
            enum:
              - resource
              - user
              - asset
              - service
              - review
      responses:
        "200":
          $ref: "#/components/responses/SchemaResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/UnexpectedError"
  "/esmappings":
    get:
      tags:
        - esmappings
      summary: Get ES mappings
      description: Returns ES mappings automatically generated from JSON schemas instancies
      operationId: getESmappings
      responses:
        "200":
          $ref: "#/components/responses/SchemaResponse"
        "404":
          $ref: "#/components/responses/NotFoundError"
        "500":
          $ref: "#/components/responses/UnexpectedError"

servers:
  - url: http://localhost:3010
components:    
  schemas:
    Error:
      type: object
      title: Operation Error
      description: Error that can occure on request processing
      required:
        - type
        - message
        - code
      properties:
        type:
          title: Error type
          description: Futher error type information
          type: string
        message:
          title: Error message
          description: Details about error
          type: string
        code:
          title: Error code
          description: HTTP error code
          type: number
          format: int32
          example: 409
        errors:
          title: Errors
          description: More error details that are reference in most case specification or schema validation errors
          type: array
          items:
            type: object
  responses:
    SchemaResponse:
      description: Schema data response
      content:
        text/yaml:
          schema: 
            type: string
        application/json:
          schema:
            type: string
    UnexpectedError:
      description: Internal Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFoundError:
      description: Schema not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error" 